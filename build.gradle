plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
//    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'org.guzzing'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

repositories {
    maven { url "https://repo.osgeo.org/repository/release/"}
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // hibernate spatial
    implementation 'org.hibernate:hibernate-spatial:6.4.0.CR1'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    runtimeOnly "io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64"

    // jackson
    implementation 'com.google.code.gson:gson'

    // geojson
    implementation 'org.geotools:gt-geojson:30.0'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.12.4'

}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

